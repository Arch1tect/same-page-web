{"version":3,"sources":["config/urls.js","utils/url.js","socket/socket.js","context/tab-context.js","containers/Chat/Header/Users.js","context/account-context.js","containers/Chat/Header/Header.js","containers/Chat/Message/Body.js","containers/OtherProfile/ProfileCard.js","services/user.js","containers/Account/Follow/event.js","services/follow.js","containers/OtherProfile/ProfileMeta/ProfileMeta.js","containers/OtherProfile/AvatarWithHoverCard.js","containers/Chat/Message/Message.js","containers/Chat/Body.js","components/Emoji/Emoji.js","components/OutsideClickDetector.js","components/InputWithPicker/InputWithPicker.js","containers/Chat/Footer/Footer.js","containers/Chat/index.js","containers/Comment/Header.js","containers/Comment/Message/Message.js","containers/Comment/Body.js","containers/Comment/Comment.js","services/account.js","containers/Account/ResetPassword.js","containers/Account/AvatarUploader/AvatarUploader.js","containers/Account/EditProfile.js","containers/Account/Profile/Profile.js","containers/Account/Follow/Follow.js","utils/storage.js","containers/Account/Login.js","containers/Account/Account.js","containers/OtherProfile/ProfileBody/ProfileBody.js","containers/OtherProfile/OtherProfile.js","services/message.js","containers/Inbox/Conversation/Conversation.js","containers/Inbox/Inbox.js","containers/Tab/Tab.js","App.js","serviceWorker.js","index.js"],"names":["urls","cloudFront","debugMsgSrc","dbAPI","getUrl","window","location","search","substring","getDomain","domain","url","hostname","indexOf","split","extractHostname","splitArr","arrLen","length","_socket","_config","account","pageOrSite","socketManager","sendMessage","msg","emit","connect","console","debug","connected","warn","io","path","on","data","self","sender","toString","id","type","message","startsWith","content","userId","name","username","hasAvatar","avatarSrc","danmuMsg","parent","postMessage","_sendDanmu","socketHandler","onLiveMsg","onUserJoin","onUserLeft","onDisconnected","onConnected","roomId","version","lang","pageTitle","togglePageSite","disconnect","setTimeout","TabContext","React","createContext","usersStyle","background","position","zIndex","left","width","overflow","maxHeight","padding","paddingTop","borderBottom","Users","props","tabContext","useContext","users","map","user","react_default","a","createElement","className","onClick","selectOtherUser","key","es_avatar","title","size","shape","icon","src","style","accountContext","ChatHeader","_useState","useState","_useState2","Object","slicedToArray","showUsers","toggleUsers","_useState3","_useState4","setUsers","AccountContext","useEffect","log","onlineUsers","addEventListener","e","origin","es_button","changeTab","row","justify","col","textAlign","span","es_radio","Group","defaultValue","buttonStyle","onChange","target","value","tooltip","placement","Button","border","marginLeft","Header_Users","MessageBody","imgSrc","chrome","extension","getURL","alt","Meta","Card","aboutStyle","display","whiteSpace","textOverflow","marginBottom","AvatarWithFollowerCount","ProfileCard","following","followerCount","followUser","directMessage","footer","about","stopPropagation","avatar","card","description","getUser","axios","get","concat","updateUser","payload","formData","FormData","append","post","followEventHandler","follow","ProfileMeta","setUser","setFollowerCount","_useState5","_useState6","setFollowing","_useState7","_useState8","loading","setLoading","_useState9","_useState10","loaded","setLoaded","wait","Boolean","toggleFollow","then","resp","newAccountData","objectSpread","followingCount","setAccount","updateAccountFollowing","catch","err","error","userData","childrenWithProps","Children","children","child","cloneElement","AvatarWrapper","showingCard","onMouseEnter","onMouseLeave","MyPoper","visibility","Popper_default","showCard","hideCard","anchorEl","open","OtherProfile_ProfileCard","AvatarWithHoverCard","setAnchor","hideCardTimer","clearTimeout","el","ProfileMeta_ProfileMeta","currentTarget","userNameStyle","fontSize","verticalAlign","marginRight","ChatMessage","messageHeader","withHoverCard","OtherProfile_AvatarWithHoverCard","marginTop","mergeAbove","Message_Body","chatBodyStyle","height","overflowY","overflowX","paddingBottom","AUTO_SCROLL_TRESHOLD_DISTANCE","ChatBody","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","scrollToBottomIfNearBottom","timeout","bodyDiv","bodyRef","current","scrollHeight","scrollTop","offsetHeight","addMsg","setState","state","messages","toConsumableArray","createRef","addLiveMsgToChatBody","_this2","lastMsg","index","forEach","push","Message","ref","Component","contextType","OutsideAlerter","setWrapperRef","bind","assertThisInitialized","handleClickOutside","document","removeEventListener","node","wrapperRef","event","exceptionClass","contains","close","isOutsideClick","i18n","clear","notfound","skintext","categories","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","categorieslabel","skintones","1","2","3","4","5","6","customEmojis","i","imageUrl","short_names","Emoji","OutsideClickDetector","dist_es","emojiTooltip","include","onSelect","addEmoji","set","showPreview","InputWithPicker","input","setInput","inputRef","useRef","showEmoji","setShowEmoji","willShowEmoji","setWillShowEmoji","sending","focus","emojiBtn","es_icon","prevState","margin","components_Emoji_Emoji","emoji","send","native","es_input","onKeyDown","addonBefore","disabled","placeholder","MESSAGE_TIME_GAP","lastMsgTime","Footer","components_InputWithPicker_InputWithPicker","now","Date","Chat","Header_Header","Chat_Body","Chat_Footer_Footer","Option","Select","CommentHeader","es_select","orderBy","Comment","score","setScore","voted","setVoted","time","noFooter","theme","prevScore","vote","reply","CommentBody","comments","comment","Comment_Message_Message","LIMIT","commentBodyStyle","TextArea","Input","CommentTab","onFocus","inputFocus","replyTo","replyToUserId","commentId","comment_id","res","submit","reply_to_user_id","reply_to_user_name","submitting","context","selfMsg","Math","random","moment","fromNow","clearInput","handleInput","val","offset","order","loadComments","loadMore","limit","utc","created","rowNum","rows","Comment_Header","Comment_Body","getAccount","login","password","logout","resetPassword","ResetPasswordForm","confirmDirty","handleSubmit","preventDefault","form","validateFieldsAndScroll","values","success","handleConfirmBlur","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","back","es_form","assign","labelCol","xs","sm","wrapperCol","onSubmit","Item","label","rules","required","validator","onBlur","htmlType","WrappedResetPasswordForm","Form","create","App","pictures","onDrop","picture","setFile","alreadySelectedImageClassName","compiled_default","singleImage","buttonClassName","withPreview","withIcon","withLabel","buttonText","fileTypeError","fileSizeError","imgExtension","maxFileSize","avatarFile","EditProfileForm","valuePropName","getValueFromEvent","AvatarUploader_AvatarUploader","file","whitespace","initialValue","WrappedEditProfileForm","avatarStyle","ProfileBodyStyle","minWidth","maxWidth","paddingLeft","paddingRight","wordBreak","Profile","loggingOut","setLoggingOut","fontWeight","gutter","numId","credit","showFollowings","showFollowers","showEditProfile","showResetPassword","Follow","setShowFollowers","loadingMore","setLoadingMore","usersRef","loadUsers","updatedUsers","filter","u","prevUsers","storage","local","item","localStorage","hasOwnProperty","JSON","parse","getItem","stringValue","stringify","setItem","storageEvent","createEvent","initEvent","eventName","newValue","dispatchEvent","onChanged","addListener","changes","area","NormalLoginForm","loginUser","storageManager","registering","setFieldsValue","autoLogin","slice","register","stopAutoLogin","prefix","color","WrappedNormalLoginForm","Account","resettingPassword","setResetPasswordState","edittingProfile","setEdittingProfileState","showingFollow","setShowingFollowState","setShowFollowersState","loadingAccount","setLoadingAccount","backToMainPage","ResetPassword","Account_Follow_Follow","EditProfile","Account_Profile_Profile","Login","ProfileBody","OtherProfile","ProfileBody_ProfileBody","getMessages","params","conversationBodyStyle","Conversation","conversation","other","setSending","body","text","mergeAndSaveNewConversations","Inbox","storageKey","prevAccountRef","conversations","setConversations","showNotifications","setShowNotifications","selectedConversation","newConversations","keys","_conversations$userId","apply","getOffset","c","max","defineProperty","conversationsArray","sort","b","Inbox_Conversation_Conversation","TabPane","Tabs","Tab","tab","activeTab","conversationUser","setCoversationUser","tab_context","Provider","tabs","activeKey","forceRender","containers_Chat","Comment_Comment","containers_Inbox_Inbox","Account_Account","OtherProfile_OtherProfile","require","loadingFromStorage","navigator","userLanguage","language","locale","config","top","duration","maxCount","interceptors","response","use","errorMessage","status","Promise","reject","prevProps","snapshot","defaults","headers","common","token","account_context","containers_Tab_Tab","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18ded5ca.chunk.js","sourcesContent":["const urls = {\n  // todo: this should not be in frontend\n  // backend should complete url for avatar or any asset\n  cloudFront: \"https://dnsofx4sf31ab.cloudfront.net/\",\n  debugMsgSrc: \"http://localhost:9009\",\n  dbAPI: \"https://api-v2.yiyechat.com\"\n  // dbAPI: \"http://localhost:5000\"\n}\n\nexport default urls\n","export const getUrl = () => {\n  return window.location.search.substring(1)\n}\n\nexport const getDomain = () => {\n  const url = getUrl()\n  var domain = extractHostname(url),\n    splitArr = domain.split(\".\"),\n    arrLen = splitArr.length\n\n  //extracting the root domain here\n  //if there is a subdomain\n  if (arrLen > 2) {\n    domain = splitArr[arrLen - 2] + \".\" + splitArr[arrLen - 1]\n    //check to see if it's using a Country Code Top Level Domain (ccTLD) (i.e. \".me.uk\")\n    if (\n      splitArr[arrLen - 2].length === 2 &&\n      splitArr[arrLen - 1].length === 2\n    ) {\n      //this is using a ccTLD\n      domain = splitArr[arrLen - 3] + \".\" + domain\n    }\n  }\n  return domain\n}\n\nfunction extractHostname(url) {\n  var hostname\n  //find & remove protocol (http, ftp, etc.) and get hostname\n\n  if (url.indexOf(\"//\") > -1) {\n    hostname = url.split(\"/\")[2]\n  } else {\n    hostname = url.split(\"/\")[0]\n  }\n\n  //find & remove port number\n  hostname = hostname.split(\":\")[0]\n  //find & remove \"?\"\n  hostname = hostname.split(\"?\")[0]\n\n  return hostname\n}\n","import * as io from \"socket.io-client\"\n\nimport urls from \"config/urls\"\nimport { getUrl, getDomain } from \"utils/url\"\n\nlet _socket = null\n\nconst _config = {\n  account: null,\n  pageOrSite: \"site\"\n}\nfunction _sendDanmu(message) {\n  const danmuMsg = {\n    msg: message\n  }\n  window.parent.postMessage(danmuMsg, \"*\")\n}\nconst socketManager = {\n  sendMessage: msg => {\n    _socket.emit(\"new message\", msg)\n  },\n  // connect should be called when user is logged in\n  // after user data is properly set\n  // socket is initilized only once, callbacks are registered\n  // only once, should only update socket config but not callbacks\n  connect: account => {\n    _config.account = account\n    if (_socket) {\n      console.debug(\"socket already created, reconnect\")\n      if (_socket.connected) {\n        console.warn(\"socket currently connected\")\n      } else {\n        _socket.connect()\n      }\n      return\n    } else {\n      console.debug(\"create socket and connect!\")\n    }\n    _socket = io(\"https://api.yiyechat.com\", { path: \"/socket.io\" })\n\n    _socket.on(\"new message\", data => {\n      console.debug(data)\n      // TODO: move following data massaging work to backend\n      data.self = data.sender.toString() === _config.account.id.toString()\n      data.type = \"text\"\n      if (data.message.startsWith(\"stickers/\")) {\n        data.type = \"sticker\"\n      }\n      data.content = data.message\n      data.userId = data.sender\n      data.name = data.username\n      if (data.hasAvatar) {\n        data.avatarSrc = urls.cloudFront + data.userId + \".jpg\"\n      }\n      _sendDanmu(data)\n      if (socketHandler.onLiveMsg) {\n        socketHandler.onLiveMsg(data)\n      } else {\n        console.warn(\"onLiveMsg not defined\")\n      }\n    })\n    _socket.on(\"user joined\", data => {\n      console.debug(\"user joined\")\n      if (socketHandler.onUserJoin) {\n        socketHandler.onUserJoin(data)\n      } else {\n        console.warn(\"onUserJoin not defined\")\n      }\n    })\n    _socket.on(\"user left\", data => {\n      console.debug(\"user left\")\n      if (socketHandler.onUserLeft) {\n        socketHandler.onUserLeft(data)\n      } else {\n        console.warn(\"onUserLeft not defined\")\n      }\n    })\n    _socket.on(\"disconnect\", data => {\n      console.debug(\"disconnect\")\n      if (socketHandler.onDisconnected) {\n        socketHandler.onDisconnected(data)\n      } else {\n        console.warn(\"onDisconnected not defined\")\n      }\n    })\n    _socket.on(\"login\", data => {\n      console.debug(\"connected, login as \" + _config.account.id)\n      if (socketHandler.onConnected) {\n        socketHandler.onConnected(data)\n      } else {\n        console.warn(\"onConnected not defined\")\n      }\n\n      _socket.emit(\"login\", {\n        username: _config.account.name,\n        userId: _config.account.id,\n        roomId: _config.pageOrSite === \"page\" ? getUrl() : getDomain(),\n        url: getUrl(), // added field in v2.6.0\n        version: \"4.0.0\",\n        lang: \"en\", // TODO\n        pageTitle: \"\"\n        // token: chatboxConfig.token TODO\n      })\n    })\n  },\n  togglePageSite: pageOrSite => {\n    // TODO: don't really have to reconnect\n    // just tell socket server to change room\n    _config.pageOrSite = pageOrSite\n    _socket.disconnect()\n    setTimeout(() => {\n      _socket.connect()\n    }, 500)\n  },\n  disconnect: () => {\n    if (_socket) {\n      if (_socket.connected) {\n        console.debug(\"disconnect socket\")\n        _socket.disconnect()\n      } else {\n        console.warn(\"socket not connected, no need to disconnect\")\n      }\n    } else {\n      console.warn(\"socket not created, cannot disconnect\")\n    }\n  }\n}\nexport const socketHandler = {}\nexport default socketManager\n","import React from \"react\"\n\nconst TabContext = React.createContext()\n\nexport default TabContext\n","import React, { useContext } from \"react\"\nimport { Avatar } from \"antd\"\nimport TabContext from \"context/tab-context\"\n\nimport urls from \"config/urls\"\n\nconst usersStyle = {\n  background: \"white\",\n  position: \"fixed\",\n  zIndex: 1,\n  left: 0,\n  width: \"100%\",\n  overflow: \"auto\",\n  maxHeight: \"50%\",\n  padding: 5,\n  paddingTop: 10,\n  borderBottom: \"1px solid lightgray\"\n}\n\nfunction Users(props) {\n  const tabContext = useContext(TabContext)\n\n  const users = (props.users || []).map(user => {\n    if (user.hasAvatar) {\n      user.avatarSrc = urls.cloudFront + user.userId + \".jpg\"\n    }\n    return (\n      <div\n        className=\"sp-online-user\"\n        onClick={() => tabContext.selectOtherUser(user)}\n        key={user.userId}\n      >\n        <Avatar\n          title={user.username}\n          size={45}\n          shape=\"square\"\n          icon=\"user\"\n          src={user.avatarSrc}\n        />\n        <div className=\"sp-online-user-username\">{user.username}</div>\n      </div>\n    )\n  })\n\n  return <div style={usersStyle}>{users}</div>\n}\n\nexport default Users\n","import React from \"react\"\n\nconst accountContext = React.createContext()\n\nexport default accountContext\n","import \"./Header.css\"\n\nimport React, { useState, useEffect, useContext } from \"react\"\nimport { Radio, Button, Tooltip } from \"antd\"\nimport { Row, Col } from \"antd\"\n\nimport socketManager, { socketHandler } from \"socket/socket\"\nimport Users from \"./Users\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport urls from \"config/urls\"\nimport { getUrl, getDomain } from \"utils/url\"\n\nfunction ChatHeader(props) {\n  const [showUsers, toggleUsers] = useState(false)\n  const [users, setUsers] = useState([])\n  const accountContext = useContext(AccountContext)\n  const tabContext = useContext(TabContext)\n\n  // TODO: need to change back to class component\n  // if need access to users state\n  // like Body.js\n  // no, not really\n  useEffect(() => {\n    console.log(\"register user join/left handlers\")\n    socketHandler.onUserJoin = data => {\n      setUsers(data.onlineUsers)\n    }\n    socketHandler.onUserLeft = data => {\n      setUsers(data.onlineUsers)\n    }\n    window.addEventListener(\n      \"message\",\n      e => {\n        if (e.origin === urls.debugMsgSrc) {\n          setUsers(e.data)\n        }\n      },\n      false\n    )\n    return () => {\n      socketHandler.onUserJoin = null\n      socketHandler.onUserLeft = null\n    }\n    // No clean up because chat header is never unmounted after mounted\n  }, [])\n\n  let content = (\n    <center>\n      <Button\n        onClick={() => {\n          tabContext.changeTab(\"account\")\n        }}\n        size=\"small\"\n        type=\"primary\"\n      >\n        去登录\n      </Button>\n    </center>\n  )\n  if (accountContext.account) {\n    content = (\n      <div>\n        <Row justify=\"center\">\n          <Col style={{ textAlign: \"left\" }} span={8}>\n            {/* <Button\n              style={{ border: \"none\" }}\n              size=\"small\"\n              icon=\"notification\"\n            /> */}\n          </Col>\n          <Col span={8}>\n            {/* <Switch\n        className=\"sp-toggle-online\"\n        checkedChildren=\"在线\"\n        unCheckedChildren=\"离线\"\n        defaultChecked\n        onChange={toggleOnline}\n      /> */}\n\n            <Radio.Group\n              className=\"sp-toggle-page-site-chat\"\n              size=\"small\"\n              defaultValue=\"site\"\n              buttonStyle=\"solid\"\n              onChange={e => {\n                socketManager.togglePageSite(e.target.value)\n                console.log(e.target.value)\n              }}\n            >\n              <Tooltip placement=\"bottom\" title={getUrl()}>\n                <Radio.Button value=\"page\">网页</Radio.Button>\n              </Tooltip>\n              <Tooltip placement=\"bottom\" title={getDomain()}>\n                <Radio.Button value=\"site\">网站</Radio.Button>\n              </Tooltip>\n            </Radio.Group>\n          </Col>\n          <Col style={{ textAlign: \"right\" }} span={8}>\n            <Button\n              style={{ border: \"none\" }}\n              onClick={() => toggleUsers(!showUsers)}\n              size=\"small\"\n              icon=\"team\"\n            >\n              <span style={{ marginLeft: 5 }}>{users.length}</span>\n            </Button>\n          </Col>\n        </Row>\n        {showUsers && <Users users={users} />}\n      </div>\n    )\n  }\n  return <div className=\"sp-tab-header\">{content}</div>\n}\n\nexport default ChatHeader\n","/*global chrome*/\n\nimport \"./Body.css\"\n\nimport React from \"react\"\n\nfunction MessageBody(props) {\n  const data = props.data\n  let content = data.content\n  let className = \"sp-message-body \" + data.type\n  if (data.type === \"sticker\") {\n    // TODO: maybe centralize this code for getting image path\n    let imgSrc = content\n    if (chrome.extension) {\n      imgSrc = chrome.extension.getURL(\"build/\" + content)\n    }\n    content = <img alt={imgSrc} src={imgSrc} />\n  }\n  return <div className={className}>{content}</div>\n}\n\nexport default MessageBody\n","import React from \"react\"\nimport { Button, Avatar, Card } from \"antd\"\nconst { Meta } = Card\n\nconst aboutStyle = {\n  display: \"inline-block\",\n  width: \"100%\",\n  whiteSpace: \"nowrap\",\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  textAlign: \"left\",\n  marginBottom: 5\n}\n\nfunction ProfileCard(props) {\n  const { user, following, followerCount, followUser, directMessage } = props\n  const footer = (\n    <div>\n      {user.about && <div style={aboutStyle}>{user.about}</div>}\n\n      {following && (\n        <Button\n          icon=\"user-delete\"\n          size=\"small\"\n          onClick={e => {\n            e.stopPropagation()\n\n            followUser(false)\n          }}\n        >\n          取消关注\n        </Button>\n      )}\n      {!following && (\n        <Button\n          icon=\"user-add\"\n          type=\"primary\"\n          size=\"small\"\n          onClick={e => {\n            e.stopPropagation()\n            followUser(true)\n          }}\n        >\n          关注\n        </Button>\n      )}\n\n      <Button\n        onClick={e => {\n          e.stopPropagation()\n          directMessage(user)\n        }}\n        icon=\"mail\"\n        style={{ marginLeft: 10 }}\n        size=\"small\"\n      >\n        私信\n      </Button>\n    </div>\n  )\n\n  const avatar = (\n    <AvatarWithFollowerCount\n      followerCount={followerCount}\n      src={user.avatarSrc}\n    />\n  )\n\n  return (\n    <Card\n      onClick={e => {\n        e.stopPropagation()\n      }}\n      size=\"small\"\n      style={{ width: 270, overflow: \"hidden\" }}\n    >\n      <Meta avatar={avatar} title={user.name} description={footer} />\n    </Card>\n  )\n}\n\nfunction AvatarWithFollowerCount(props) {\n  return (\n    <span>\n      <Avatar size={48} src={props.src} icon=\"user\" />\n      {/* <div>关注者: {props.followerCount}</div> */}\n    </span>\n  )\n}\n\nexport default ProfileCard\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getUser = userId => {\n  return axios.get(`${urls.dbAPI}/api/v1/user/${userId}`)\n}\n\nexport const updateUser = payload => {\n  const formData = new FormData()\n  formData.append(\"name\", payload.name)\n  formData.append(\"about\", payload.about)\n  formData.append(\"avatar\", payload.avatar, \"avatar\")\n  return axios.post(urls.dbAPI + \"/api/v1/user\", formData)\n}\n","// If user follow/unfollow anyone, it will call\n// follow method, the Follow.js component can 'subscribe'\n// to it by providing a definition of the function\n\nconst followEventHandler = {\n  follow: () => {\n    console.log(\"follow not mounted\")\n  }\n}\n\nexport default followEventHandler\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const followUser = id => {\n  const payload = {\n    id: id\n  }\n  return axios.post(`${urls.dbAPI}/api/v1/follow`, payload)\n}\n","import React, { useState, useEffect, useContext } from \"react\"\n\nimport { getUser } from \"services/user\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport followEventHandler from \"containers/Account/Follow/event\"\nimport { followUser } from \"services/follow\"\n\nfunction ProfileMeta(props) {\n  // Use this container to fetch other user's data\n  // it's a wrapper that handles state and api calls\n  // but doesn't contain html layout\n\n  const accountContext = useContext(AccountContext)\n  const tabContext = useContext(TabContext)\n\n  const [user, setUser] = useState(props.user)\n  const [followerCount, setFollowerCount] = useState(\"\")\n  const [following, setFollowing] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [loaded, setLoaded] = useState(false)\n  // If receive a wait, won't start fetching right away\n  // e.g. hover card\n  const wait = Boolean(props.wait)\n\n  function updateAccountFollowing(follow) {\n    // context.account needs to know about\n    // following number has changed\n    const newAccountData = { ...accountContext.account }\n    if (follow) {\n      newAccountData.followingCount++\n    } else {\n      newAccountData.followingCount--\n    }\n    accountContext.setAccount(newAccountData)\n  }\n\n  function toggleFollow(follow) {\n    setFollowing(follow)\n    if (follow) {\n      setFollowerCount(followerCount + 1)\n    } else {\n      setFollowerCount(followerCount - 1)\n    }\n\n    followUser(user.id)\n      .then(resp => {\n        updateAccountFollowing(follow)\n        followEventHandler.follow(follow, user)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {})\n  }\n\n  useEffect(() => {\n    if (wait || loaded) return\n    setLoading(true)\n    getUser(user.id)\n      .then(resp => {\n        console.debug(resp.data)\n        const userData = resp.data\n        setLoaded(true)\n        setUser(userData)\n        setFollowing(userData.following)\n        setFollowerCount(userData.followerCount)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        console.log(\"done loading\")\n        setLoading(false)\n      })\n  }, [wait, loaded])\n\n  const childrenWithProps = React.Children.map(props.children, child =>\n    React.cloneElement(child, {\n      ...child.props,\n      loading: loading,\n      loaded: loaded,\n      user: user,\n      followerCount: followerCount,\n      following: following,\n      followUser: toggleFollow,\n      directMessage: tabContext.directMessage\n    })\n  )\n  return <span>{childrenWithProps}</span>\n}\n\nexport default ProfileMeta\n","import React, { useState, useContext } from \"react\"\nimport { Avatar } from \"antd\"\nimport TabContext from \"context/tab-context\"\n\nimport ProfileCard from \"./ProfileCard\"\nimport ProfileMeta from \"./ProfileMeta\"\n\nimport Popper from \"@material-ui/core/Popper\"\n\nfunction AvatarWithHoverCard(props) {\n  const user = props.user\n  const tabContext = useContext(TabContext)\n  const [anchorEl, setAnchor] = useState(null)\n\n  const showingCard = Boolean(anchorEl)\n  let hideCardTimer = 0\n  function hideCard() {\n    clearTimeout(hideCardTimer)\n    hideCardTimer = setTimeout(() => {\n      setAnchor(null)\n    }, 100)\n  }\n  function showCard(el) {\n    clearTimeout(hideCardTimer)\n    if (el) {\n      setAnchor(el)\n    }\n  }\n\n  return (\n    <span>\n      <ProfileMeta wait={!showingCard} user={user}>\n        <AvatarWrapper\n          icon=\"user\"\n          className={props.className}\n          src={user.avatarSrc}\n          size={props.size}\n          onClick={() => tabContext.selectOtherUser(user)}\n          onMouseEnter={e => {\n            console.log(\"mouse enter avatar\")\n            showCard(e.currentTarget)\n          }}\n          onMouseLeave={hideCard}\n          showingCard={showingCard}\n        />\n        <MyPoper\n          showCard={showCard}\n          hideCard={hideCard}\n          showingCard={showingCard}\n          anchorEl={anchorEl}\n        />\n      </ProfileMeta>\n    </span>\n  )\n}\n\nfunction AvatarWrapper(props) {\n  let icon = \"user\"\n  let src = props.src\n  if (props.loading && props.showingCard) {\n    src = null\n    icon = \"loading\"\n  }\n\n  return (\n    <Avatar\n      icon={icon}\n      className={props.className}\n      src={src}\n      size={props.size}\n      onClick={props.onClick}\n      onMouseEnter={props.onMouseEnter}\n      onMouseLeave={props.onMouseLeave}\n    />\n  )\n}\n\nfunction MyPoper(props) {\n  let visibility = \"hidden\"\n  if (props.loaded) {\n    visibility = \"visible\"\n  }\n  return (\n    <Popper\n      style={{ zIndex: 10, visibility: visibility }}\n      onMouseEnter={e => {\n        props.showCard()\n      }}\n      onMouseLeave={props.hideCard}\n      anchorEl={props.anchorEl}\n      open={props.showingCard}\n    >\n      <ProfileCard {...props} />\n    </Popper>\n  )\n}\n\nexport default AvatarWithHoverCard\n","import React from \"react\"\n\nimport MessageBody from \"./Body\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\nimport { Avatar } from \"antd\"\n\n/*\nThis is used by chat messages and direct messages\nprops includes:\n  avatarSrc\n  username\n  content\n  type: text/sticker\n  self\n*/\nconst userNameStyle = {\n  fontSize: \"smaller\",\n  verticalAlign: \"middle\",\n  marginLeft: 5,\n  marginRight: 5\n}\n\nfunction ChatMessage(props) {\n  const data = props.data\n\n  const user = {\n    id: data.userId,\n    name: data.name,\n    self: data.self,\n    avatarSrc: data.avatarSrc\n  }\n\n  let messageHeader = null\n  let textAlign = \"left\"\n\n  let avatar = <Avatar size=\"small\" icon=\"user\" src={user.avatarSrc} />\n  if (!user.self && props.withHoverCard) {\n    avatar = (\n      <AvatarWithHoverCard\n        className=\"sp-chat-message-avatar\"\n        size=\"small\"\n        user={user}\n      />\n    )\n  }\n\n  if (user.self) {\n    textAlign = \"right\"\n    messageHeader = (\n      <div style={{ marginTop: 10 }}>\n        <span style={userNameStyle}>{user.name}</span>\n        {avatar}\n      </div>\n    )\n  } else {\n    messageHeader = (\n      <div style={{ marginTop: 10 }}>\n        {avatar}\n        <span style={userNameStyle}>{user.name}</span>\n      </div>\n    )\n  }\n  if (props.mergeAbove) {\n    messageHeader = <span />\n  }\n\n  return (\n    <div\n      className={user.self ? \"self\" : \"other\"}\n      style={{ textAlign: textAlign }}\n    >\n      {messageHeader}\n      <MessageBody data={data} />\n    </div>\n  )\n}\n\nexport default ChatMessage\n","import React from \"react\"\nimport Message from \"./Message\"\nimport { socketHandler } from \"socket/socket\"\nimport AccountContext from \"context/account-context\"\nconst chatBodyStyle = {\n  height: \"calc(100% - 107px)\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#f6f9fc\",\n  padding: 10,\n  paddingBottom: 50\n}\nconst AUTO_SCROLL_TRESHOLD_DISTANCE = 200\nclass ChatBody extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { messages: props.data || [] }\n    this.bodyRef = React.createRef()\n    // window.addLiveMsgToChatBody only for debug\n    window.addLiveMsgToChatBody = this.addMsg\n  }\n\n  componentDidMount() {\n    console.log(\"register new message handler\")\n    socketHandler.onLiveMsg = data => {\n      this.setState((state, props) => ({\n        messages: [...state.messages, data]\n      }))\n      let timeout = 10\n      if (data.type === \"sticker\") timeout = 500\n      this.scrollToBottomIfNearBottom(timeout)\n    }\n  }\n  scrollToBottomIfNearBottom = timeout => {\n    timeout = timeout || 100\n    const bodyDiv = this.bodyRef.current\n    if (\n      bodyDiv.scrollHeight - bodyDiv.scrollTop - bodyDiv.offsetHeight <\n      AUTO_SCROLL_TRESHOLD_DISTANCE\n    ) {\n      setTimeout(() => {\n        bodyDiv.scrollTop = bodyDiv.scrollHeight\n      }, timeout)\n    }\n  }\n  addMsg = msg => {\n    this.setState((state, props) => ({\n      messages: [...state.messages, msg]\n    }))\n  }\n\n  render() {\n    let messages = []\n    let lastMsg = null\n    let index = 0\n    const data = this.state.messages\n\n    // note: do not modify msg since it's state data\n    data.forEach(msg => {\n      let mergeAbove = false\n      if (lastMsg && lastMsg.userId === msg.userId) {\n        mergeAbove = true\n      }\n      messages.push(\n        <Message\n          withHoverCard={true}\n          key={index++}\n          data={msg}\n          mergeAbove={mergeAbove}\n        />\n      )\n      lastMsg = msg\n    })\n    return (\n      <div ref={this.bodyRef} style={chatBodyStyle}>\n        {messages}\n      </div>\n    )\n  }\n}\nChatBody.contextType = AccountContext\n\nexport default ChatBody\n","import \"./Emoji.css\"\nimport \"emoji-mart/css/emoji-mart.css\"\n\nimport React from \"react\"\nimport { Picker } from \"emoji-mart\"\n\nimport ClickWrapper from \"../OutsideClickDetector\"\n\nconst i18n = {\n  search: \"搜索\",\n  clear: \"清除\", // Accessible label on \"clear\" button\n  notfound: \"没找到\",\n  skintext: \"Choose your default skin tone\",\n  categories: {\n    search: \"搜索结果\",\n    recent: \"常用\",\n    people: \"笑脸\",\n    nature: \"动植物\",\n    foods: \"吃喝\",\n    activity: \"活动\",\n    places: \"旅游\",\n    objects: \"东西\",\n    symbols: \"象征\",\n    flags: \"旗子\",\n    custom: \"欢乐兔\"\n  },\n  categorieslabel: \"Emoji categories\", // Accessible title for the list of categories\n  skintones: {\n    1: \"Default Skin Tone\",\n    2: \"Light Skin Tone\",\n    3: \"Medium-Light Skin Tone\",\n    4: \"Medium Skin Tone\",\n    5: \"Medium-Dark Skin Tone\",\n    6: \"Dark Skin Tone\"\n  }\n}\nconst customEmojis = []\nfor (let i = 1; i <= 90; i++) {\n  const imageUrl = `stickers/happy_bun/${i}.gif`\n  customEmojis.push({\n    name: \"happy bun \" + i,\n    short_names: [`happy_bun_` + i],\n    imageUrl: imageUrl\n  })\n}\n\nfunction Emoji(props) {\n  return (\n    <ClickWrapper exceptionClass={props.exceptionClass} close={props.close}>\n      <Picker\n        i18n={i18n}\n        emojiTooltip={true}\n        include={[\"custom\", \"people\", \"nature\", \"foods\", \"activity\", \"places\"]}\n        custom={customEmojis}\n        onSelect={props.addEmoji}\n        set=\"apple\"\n        showPreview={false}\n      />\n    </ClickWrapper>\n  )\n}\nexport default Emoji\n","import React from \"react\"\n\nclass OutsideAlerter extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.setWrapperRef = this.setWrapperRef.bind(this)\n    this.handleClickOutside = this.handleClickOutside.bind(this)\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside)\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node\n  }\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    // console.log(event.target.className)\n    if (\n      event.target.className &&\n      event.target.className.indexOf &&\n      event.target.className.indexOf(this.props.exceptionClass) > -1\n    )\n      return\n    if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n      this.props.close()\n      event.isOutsideClick = true\n    }\n  }\n\n  render() {\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>\n  }\n}\n\nexport default OutsideAlerter\n","import \"./InputWithPicker.css\"\n\nimport React, { useState, useRef, useEffect } from \"react\"\nimport { Icon, Input } from \"antd\"\n\nimport Emoji from \"../Emoji\"\n\nfunction InputWithPicker(props) {\n  const [input, setInput] = useState(\"\")\n  const inputRef = useRef()\n  // show emoji is one step slower than will show emoji\n  // so that we can show a loading icon\n  const [showEmoji, setShowEmoji] = useState(false)\n  const [willShowEmoji, setWillShowEmoji] = useState(false)\n\n  const sending = props.sending\n  useEffect(() => {\n    if (!sending) {\n      inputRef.current.focus()\n    }\n  }, [sending])\n\n  useEffect(() => {\n    setShowEmoji(willShowEmoji)\n  }, [willShowEmoji])\n\n  const handleKeyDown = e => {\n    if (e.key === \"Enter\") {\n      setWillShowEmoji(false)\n      const shouldClear = props.send(input)\n      if (shouldClear) {\n        setInput(\"\")\n      }\n    }\n  }\n  const addEmoji = emoji => {\n    if (emoji.custom) {\n      props.send(emoji.imageUrl)\n      setWillShowEmoji(false)\n    } else {\n      setInput(input => {\n        return input + emoji.native\n      })\n    }\n    inputRef.current.focus()\n  }\n  const handleChange = e => {\n    setInput(e.target.value)\n  }\n\n  const emojiBtn = (\n    <Icon\n      className=\"emojiOpener\"\n      onClick={e => {\n        setWillShowEmoji(prevState => {\n          setWillShowEmoji(!prevState)\n        })\n      }}\n      type=\"smile\"\n    />\n  )\n\n  return (\n    <div className=\"sp-input-with-picker\">\n      {willShowEmoji && <Icon style={{ margin: 10 }} type=\"loading\" />}\n      {showEmoji && (\n        <Emoji\n          addEmoji={addEmoji}\n          exceptionClass=\"emojiOpener\"\n          close={() => {\n            setWillShowEmoji(false)\n          }}\n        />\n      )}\n      <Input\n        ref={inputRef}\n        size=\"large\"\n        onKeyDown={handleKeyDown}\n        value={input}\n        addonBefore={emojiBtn}\n        // addonAfter={<Icon type=\"paper-clip\" />}\n        onChange={handleChange}\n        disabled={sending}\n        placeholder={sending ? \"发送中。。。\" : \"请输入。。。\"}\n      />\n    </div>\n  )\n}\n\nexport default InputWithPicker\n","import \"./Footer.css\"\n\nimport React, { useContext } from \"react\"\nimport { message } from \"antd\"\n\nimport InputWithPicker from \"components/InputWithPicker\"\nimport AccountContext from \"context/account-context\"\nimport socketManager from \"socket/socket\"\n\nconst MESSAGE_TIME_GAP = 3 * 1000\nlet lastMsgTime = 0\n\nfunction Footer(props) {\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n\n  const send = input => {\n    const now = new Date()\n    if (now - lastMsgTime > MESSAGE_TIME_GAP) {\n      let msg = {\n        msg: input,\n        // TODO: no need to send username\n        // socket server remembers it during login\n        username: account.username\n      }\n      socketManager.sendMessage(msg)\n      lastMsgTime = now\n      return true\n    } else {\n      message.warn(\"请放慢速度\")\n      return false\n    }\n  }\n\n  let content = (\n    <center style={{ padding: 10, background: \"lightgray\" }}>尚未登录</center>\n  )\n  if (account) {\n    content = <InputWithPicker send={send} />\n  }\n\n  return <div className=\"sp-chat-bottom\">{content}</div>\n}\n\nexport default Footer\n","import React from \"react\"\n\nimport Header from \"./Header\"\nimport Body from \"./Body\"\nimport Footer from \"./Footer\"\n\nfunction Chat(props) {\n  return (\n    <div>\n      <Header />\n      <Body />\n      <Footer />\n    </div>\n  )\n}\n\nexport default Chat\n","import React from \"react\"\nimport { Select } from \"antd\"\nconst Option = Select.Option\n\nfunction CommentHeader(props) {\n  return (\n    <center className=\"sp-tab-header\">\n      <Select onChange={props.orderBy} size=\"small\" defaultValue=\"best\">\n        <Option value=\"newest\">按时间排序</Option>\n        <Option value=\"best\">按好评排序</Option>\n      </Select>\n    </center>\n  )\n}\nexport default CommentHeader\n","import \"./Message.css\"\n\nimport React, { useState, useContext } from \"react\"\nimport { Icon } from \"antd\"\nimport AvatarWithHoverCard from \"containers/OtherProfile/AvatarWithHoverCard\"\nimport AccountContext from \"context/account-context\"\n\nfunction Comment(props) {\n  const data = props.data\n  const user = {\n    id: data.userId,\n    name: data.name,\n    avatarSrc: data.avatarSrc,\n    self: data.self\n  }\n\n  const [score, setScore] = useState(data.score)\n  const [voted, setVoted] = useState(data.voted)\n  const account = useContext(AccountContext).account\n\n  function theme() {\n    if (voted) return \"twoTone\"\n    return \"outlined\"\n  }\n  return (\n    <div style={{ marginTop: 10 }} className={data.self ? \"self\" : \"\"}>\n      <AvatarWithHoverCard className=\"sp-comment-message-avatar\" user={user} />\n      <div className=\"sp-message-body text\">\n        <div style={{ marginBottom: 5 }}>\n          <span className=\"sp-comment-message-username\">{data.name}</span>\n          <span className=\"sp-comment-message-time\">{data.time}</span>\n        </div>\n        <div>{data.content}</div>\n        {!data.noFooter && (\n          <div className=\"sp-comment-message-footer\">\n            <span>\n              <Icon\n                theme={theme()}\n                onClick={() => {\n                  if (!account) {\n                    // TODO: show error msg\n                    return\n                  }\n                  setScore(prevScore => {\n                    if (voted) return prevScore - 1\n                    return prevScore + 1\n                  })\n                  setVoted(prevState => {\n                    return !prevState\n                  })\n                  props.vote(data.id)\n                }}\n                type=\"like\"\n              />\n              <span className=\"sp-comment-message-score\">{score}</span>\n            </span>\n            <span\n              onClick={() => props.reply(data.userId, data.name)}\n              className=\"sp-comment-message-reply\"\n            >\n              回复\n            </span>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default Comment\n","import React from \"react\"\n\nimport Message from \"./Message\"\n\nfunction CommentBody(props) {\n  const data = props.data || []\n  // let index = 0\n  let comments = data.map(comment => {\n    return (\n      <Message\n        vote={props.vote}\n        reply={props.reply}\n        // key={index++}\n        key={comment.id}\n        data={comment}\n      />\n    )\n  })\n  if (!comments.length) {\n    comments = <center>没有评论</center>\n  }\n\n  return <div>{comments}</div>\n}\n\nexport default CommentBody\n","import \"./Comment.css\"\n\nimport React from \"react\"\nimport { Button, Icon, Input } from \"antd\"\n\nimport axios from \"axios\"\nimport moment from \"moment\"\n\nimport urls from \"config/urls\"\nimport { getUrl } from \"utils/url\"\nimport AccountContext from \"context/account-context\"\nimport Header from \"./Header\"\nimport Body from \"./Body\"\n\nconst LIMIT = 10\n\nconst commentBodyStyle = {\n  height: \"calc(100% - 100px)\",\n  overflow: \"auto\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#eceff1\",\n  padding: 10,\n  paddingBottom: 30\n}\n\nconst { TextArea } = Input\n\nclass CommentTab extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      submitting: false,\n      comments: [],\n      input: \"\",\n      inputFocus: false,\n      replyTo: \"\",\n      replyToUserId: \"\"\n    }\n    this.inputRef = React.createRef()\n    this.bodyRef = React.createRef()\n    this.offset = 0\n    this.order = \"best\"\n  }\n  onFocus = e => {\n    this.setState({ inputFocus: true })\n  }\n\n  reply = (userId, username) => {\n    this.setState({ replyTo: username, replyToUserId: userId })\n    this.inputRef.current.focus()\n  }\n\n  vote = commentId => {\n    const payload = {\n      comment_id: commentId\n    }\n    axios\n      .post(urls.dbAPI + \"/api/v1/vote_comment\", payload)\n      .then(res => {})\n      .catch(err => {})\n      .then(() => {})\n  }\n\n  submit = () => {\n    const payload = {\n      url: getUrl(),\n      content: this.state.input,\n      reply_to_user_id: this.state.replyToUserId,\n      reply_to_user_name: this.state.replyTo\n    }\n\n    this.setState({ submitting: true })\n    axios\n      .post(urls.dbAPI + \"/api/v1/post_comment\", payload)\n      .then(res => {\n        let content = this.state.input\n        if (this.state.replyTo) {\n          content = \"@\" + this.state.replyTo + \" \\n\" + content\n        }\n        const account = this.context.account\n        const selfMsg = {\n          id: Math.random(100), // whatever unique\n          userId: account.id,\n          avatarSrc: account.avatarSrc,\n          name: account.name,\n          time: moment().fromNow(),\n          content: content,\n          self: true,\n          noFooter: true // can't support any action since there is no id\n          // maybe backend can return id\n        }\n        this.setState({ comments: [selfMsg].concat(this.state.comments) })\n        this.clearInput()\n        setTimeout(() => {\n          console.debug(\"[Comment] scroll to top\")\n          this.bodyRef.current.scrollTop = 0\n        }, 500)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        this.setState({ submitting: false })\n      })\n  }\n  handleInput = e => {\n    this.setState({ input: e.target.value })\n  }\n  clearInput = () => {\n    this.setState({\n      input: \"\",\n      inputFocus: false,\n      replyTo: null,\n      replyToUserId: null\n    })\n  }\n  orderBy = val => {\n    this.setState({ comments: [] })\n    this.offset = 0\n    this.order = val\n    this.loadComments()\n  }\n  loadMore = () => {\n    this.offset = this.state.comments.length\n    this.loadComments()\n  }\n  loadComments = () => {\n    this.setState({ loading: true })\n    const payload = {\n      url: getUrl(),\n      offset: this.offset,\n      limit: LIMIT,\n      order: this.order\n    }\n    axios\n      .post(urls.dbAPI + \"/api/v1/get_comments\", payload)\n      .then(res => {\n        res.data.forEach(comment => {\n          comment.time = moment.utc(comment.created).fromNow()\n        })\n        this.setState({ comments: this.state.comments.concat(res.data) })\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        this.setState({ loading: false })\n      })\n  }\n  componentDidMount() {\n    this.loadComments()\n  }\n\n  render() {\n    let rowNum = 1\n    if (this.state.inputFocus) {\n      rowNum = 5\n    }\n    let placeholder = \"留言。。。\"\n    if (this.state.replyTo) {\n      placeholder = \"@\" + this.state.replyTo\n    }\n    let footer = (\n      <center style={{ padding: 10, background: \"lightgray\" }}>尚未登录</center>\n    )\n    if (this.context.account) {\n      footer = (\n        <div>\n          <TextArea\n            size=\"large\"\n            value={this.state.input}\n            onFocus={this.onFocus}\n            onChange={this.handleInput}\n            placeholder={placeholder}\n            rows={rowNum}\n            ref={this.inputRef}\n          />\n          {this.state.inputFocus && (\n            <div\n              style={{\n                width: \"100%\",\n                textAlign: \"right\"\n              }}\n            >\n              <Button onClick={this.clearInput}>取消</Button>\n              <Button\n                onClick={this.submit}\n                style={{ margin: 10 }}\n                type=\"primary\"\n                loading={this.state.submitting}\n              >\n                提交\n              </Button>\n            </div>\n          )}\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Header orderBy={this.orderBy} />\n        <div ref={this.bodyRef} style={commentBodyStyle}>\n          {this.state.loading && this.state.comments.length === 0 && (\n            <center>\n              <Icon type=\"loading\" />\n            </center>\n          )}\n          {(!this.state.loading || this.state.comments.length > 0) && (\n            <Body\n              data={this.state.comments}\n              vote={this.vote}\n              reply={this.reply}\n            />\n          )}\n          {this.state.comments.length > 0 && (\n            <center style={{ marginTop: 20 }}>\n              {/* TODO: only if there is more */}\n              <Button\n                loading={this.state.loading}\n                type=\"primary\"\n                onClick={this.loadMore}\n              >\n                加载更多...\n              </Button>\n            </center>\n          )}\n        </div>\n        <div className=\"sp-comment-footer\">{footer}</div>\n      </div>\n    )\n  }\n}\n\nCommentTab.contextType = AccountContext\n\nexport default CommentTab\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getAccount = () => {\n  return axios.get(`${urls.dbAPI}/api/v1/account`)\n}\nexport const login = (userId, password) => {\n  const payload = {\n    userId: userId,\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/login\", payload)\n}\nexport const logout = () => {\n  return axios.post(urls.dbAPI + \"/api/v1/logout\")\n}\nexport const register = password => {\n  const payload = {\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/register\", payload)\n}\nexport const resetPassword = password => {\n  const payload = {\n    password: password\n  }\n  return axios.post(urls.dbAPI + \"/api/v1/reset_password\", payload)\n}\n","import React from \"react\"\nimport { Form, Input, Button, message } from \"antd\"\n\nimport { resetPassword } from \"services/account\"\n\nclass ResetPasswordForm extends React.Component {\n  state = {\n    confirmDirty: false\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        resetPassword(values.password)\n          .then(() => {\n            message.success(\"更改成功！\")\n          })\n          .catch()\n          .then()\n        console.log(\"Received values of form: \", values)\n      }\n    })\n  }\n\n  handleConfirmBlur = e => {\n    const value = e.target.value\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value })\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && value !== form.getFieldValue(\"password\")) {\n      callback(\"两次输入不一致!\")\n    } else {\n      callback()\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const form = this.props.form\n    if (value && this.state.confirmDirty) {\n      form.validateFields([\"confirm\"], { force: true })\n    }\n    callback()\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    }\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    }\n\n    return (\n      <div className=\"sp-special-tab\">\n        <Button\n          onClick={this.props.back}\n          style={{\n            position: \"fixed\",\n            marginTop: 5,\n            marginLeft: 5,\n            border: \"none\",\n            fontSize: \"large\"\n          }}\n          icon=\"arrow-left\"\n        />\n        <center>\n          <h3 style={{ marginTop: 50, marginBottom: 30 }}>更改密码</h3>\n        </center>{\" \"}\n        <Form\n          style={{ width: \"70%\", margin: \"auto\" }}\n          {...formItemLayout}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"新密码\">\n            {getFieldDecorator(\"password\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please input your password!\"\n                },\n                {\n                  validator: this.validateToNextPassword\n                }\n              ]\n            })(<Input type=\"password\" />)}\n          </Form.Item>\n          <Form.Item label=\"确认密码\">\n            {getFieldDecorator(\"confirm\", {\n              rules: [\n                {\n                  required: true,\n                  message: \"Please confirm your password!\"\n                },\n                {\n                  validator: this.compareToFirstPassword\n                }\n              ]\n            })(<Input type=\"password\" onBlur={this.handleConfirmBlur} />)}\n          </Form.Item>\n\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              size=\"large\"\n              style={{ marginRight: 20 }}\n              onClick={this.props.back}\n            >\n              取消\n            </Button>\n\n            <Button size=\"large\" type=\"primary\" htmlType=\"submit\">\n              保存\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst WrappedResetPasswordForm = Form.create({ name: \"resetPassword\" })(\n  ResetPasswordForm\n)\nexport default WrappedResetPasswordForm\n","import React from \"react\"\nimport ImageUploader from \"react-images-upload\"\nimport \"./AvatarUploader.css\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { pictures: [] }\n    this.onDrop = this.onDrop.bind(this)\n  }\n\n  onDrop(picture) {\n    console.log(picture)\n    this.setState({\n      pictures: picture\n    })\n    this.props.setFile(picture[0])\n  }\n\n  render() {\n    // this lib isn't easy to customize at all\n    // had to use class to toggle upload button!\n    let alreadySelectedImageClassName = \"\"\n    if (this.state.pictures.length) {\n      alreadySelectedImageClassName = \"sp-selected-avatar\"\n    }\n\n    return (\n      <ImageUploader\n        className={alreadySelectedImageClassName}\n        singleImage={true}\n        buttonClassName=\"ant-btn\"\n        withPreview={true}\n        withIcon={false}\n        withLabel={false}\n        buttonText=\"选择图片\"\n        fileTypeError=\"文件类型不支持\"\n        fileSizeError=\"图片太大\"\n        onChange={this.onDrop}\n        label=\"图片必须小于2MB\"\n        imgExtension={[\".jpg\", \".jpeg\", \".png\", \".gif\"]}\n        maxFileSize={5242880}\n      />\n    )\n  }\n}\n\nexport default App\n","import React from \"react\"\n\nimport { Form, Input, Select, Button, message } from \"antd\"\n\nimport AvatarUploader from \"./AvatarUploader\"\nimport { updateUser } from \"services/user\"\n\n// const { Option } = Select\nlet avatarFile = null\nclass EditProfileForm extends React.Component {\n  state = {\n    submitting: false\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values)\n        console.log(avatarFile)\n        values.avatar = avatarFile\n        this.setState({ submitting: true })\n\n        updateUser(values)\n          .then(resp => {\n            message.success(\"更新成功！\")\n            this.props.setAccount(resp.data)\n          })\n          .catch(err => {})\n          .then(() => {\n            this.setState({ submitting: false })\n          })\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    const account = this.props.account\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 }\n      }\n    }\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    }\n\n    return (\n      <div className=\"sp-special-tab\">\n        <Button\n          onClick={this.props.back}\n          style={{\n            position: \"fixed\",\n            marginTop: 5,\n            marginLeft: 5,\n            border: \"none\",\n            fontSize: \"large\"\n          }}\n          icon=\"arrow-left\"\n        />\n        <center>\n          <h3 style={{ marginTop: 50, marginBottom: 30 }}>修改资料</h3>\n        </center>{\" \"}\n        <Form\n          style={{ width: \"70%\", margin: \"auto\" }}\n          {...formItemLayout}\n          onSubmit={this.handleSubmit}\n        >\n          <Form.Item label=\"上传头像\">\n            {getFieldDecorator(\"upload\", {\n              valuePropName: \"fileList\",\n              getValueFromEvent: () => {\n                return avatarFile\n              }\n            })(\n              <AvatarUploader\n                setFile={file => {\n                  avatarFile = file\n                }}\n              />\n            )}\n          </Form.Item>\n          <Form.Item label={<span>用户名</span>}>\n            {getFieldDecorator(\"name\", {\n              rules: [\n                {\n                  message: \"用户名不能为空\",\n                  whitespace: true\n                }\n              ],\n              initialValue: account.name\n            })(<Input />)}\n          </Form.Item>\n          {/* \n          <Form.Item label=\"性别\">\n            {getFieldDecorator(\"gender\", {\n              rules: [{ required: false, message: \"请选择你的性别!\" }]\n            })(\n              <Select\n              // onChange={this.handleSelectChange}\n              >\n                <Option value=\"male\">男</Option>\n                <Option value=\"female\">女</Option>\n                <Option value=\"other\">其他</Option>\n              </Select>\n            )}\n          </Form.Item> */}\n          <Form.Item label={<span>个人简介</span>}>\n            {getFieldDecorator(\"about\", {\n              initialValue: account.about\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button\n              size=\"large\"\n              style={{ marginRight: 20 }}\n              onClick={this.props.back}\n            >\n              取消\n            </Button>\n            <Button\n              loading={this.state.submitting}\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n            >\n              保存\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\n\nconst WrappedEditProfileForm = Form.create({ name: \"edit-profile\" })(\n  EditProfileForm\n)\n\nexport default WrappedEditProfileForm\n","import \"./Profile.css\"\n\nimport React, { useState } from \"react\"\nimport { Avatar, Button, Row, Col } from \"antd\"\n\nimport { logout } from \"services/account\"\n\nconst avatarStyle = {\n  margin: \"auto\",\n  marginTop: 20,\n  display: \"block\"\n}\nconst ProfileBodyStyle = {\n  height: \"calc(100% - 35px)\",\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  width: \"100%\",\n  position: \"fixed\",\n  // background: \"rgb(249, 249, 249)\",\n  padding: 20,\n  paddingTop: 10,\n  paddingBottom: 30\n}\nconst aboutStyle = {\n  display: \"inline-block\",\n  minWidth: 200,\n  maxWidth: 350,\n  borderBottom: \"1px solid lightgray\",\n  textAlign: \"left\",\n  overflow: \"auto\",\n  maxHeight: 72,\n  padding: 5,\n  paddingLeft: 10,\n  paddingRight: 10,\n  wordBreak: \"break-word\"\n}\n\nfunction Profile(props) {\n  const account = props.account\n  const [loggingOut, setLoggingOut] = useState(false)\n\n  return (\n    <div style={ProfileBodyStyle}>\n      <Avatar\n        style={avatarStyle}\n        size={128}\n        src={account.avatarSrc}\n        icon=\"user\"\n      />\n      <center style={{ margin: 20, fontSize: \"large\", fontWeight: \"bold\" }}>\n        {account.name}\n      </center>\n      <Row gutter={50} style={{ textAlign: \"center\" }}>\n        <Col style={{ textAlign: \"right\" }} span={12}>\n          ID: {account.numId}\n        </Col>\n        <Col style={{ textAlign: \"left\" }} span={12}>\n          积分: {account.credit}\n        </Col>\n      </Row>\n      <Row gutter={50} style={{ textAlign: \"center\" }}>\n        <Col style={{ textAlign: \"right\" }} span={12}>\n          <span className=\"sp-follow-stats\" onClick={props.showFollowings}>\n            关注了: {account.followingCount}\n          </span>\n        </Col>\n        <Col style={{ textAlign: \"left\" }} span={12}>\n          <span className=\"sp-follow-stats\" onClick={props.showFollowers}>\n            关注者: {account.followerCount}\n          </span>\n        </Col>\n      </Row>\n      <br />\n      <center>\n        <div style={aboutStyle}>{account.about}</div>\n        <div style={{ marginTop: 30 }}>\n          <Button\n            type=\"primary\"\n            icon=\"edit\"\n            style={{ margin: 10 }}\n            size=\"large\"\n            onClick={props.showEditProfile}\n          >\n            修改资料\n          </Button>\n        </div>\n        <br />\n        <br />\n        <Button onClick={props.showResetPassword} style={{ margin: 10 }}>\n          更改密码\n        </Button>\n        <Button\n          onClick={() => {\n            setLoggingOut(true)\n\n            logout()\n              .then(res => {\n                console.debug(\"logout success\")\n              })\n              .catch(err => {\n                console.error(err)\n              })\n              .then(() => {\n                setLoggingOut(false)\n                props.setAccount(null)\n              })\n          }}\n          loading={loggingOut}\n          type=\"danger\"\n          style={{ margin: 10 }}\n        >\n          登出\n        </Button>\n      </center>\n    </div>\n  )\n}\n\nexport default Profile\n","import \"./Follow.css\"\nimport axios from \"axios\"\n\nimport React, { useEffect, useState, useContext, useRef } from \"react\"\nimport { Avatar, Icon, Radio, Button } from \"antd\"\n\nimport TabContext from \"context/tab-context\"\nimport AccountContext from \"context/account-context\"\nimport urls from \"config/urls\"\nimport followEventHandler from \"./event\"\n\nfunction Follow(props) {\n  const [showFollowers, setShowFollowers] = useState(props.showFollowers)\n  const [loading, setLoading] = useState(true)\n  const [loadingMore, setLoadingMore] = useState(false)\n  const [users, setUsers] = useState([])\n  const tabContext = useContext(TabContext)\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n  const usersRef = useRef([])\n\n  useEffect(() => {\n    setUsers([])\n    loadUsers(0)\n\n    if (!showFollowers) {\n      console.debug(\"register follow handler\")\n      followEventHandler.follow = (followUser, user) => {\n        console.log(\"update followings\")\n        let updatedUsers = []\n        if (!followUser) {\n          updatedUsers = usersRef.current.filter(u => u.id !== user.id)\n        } else {\n          updatedUsers = [user, ...usersRef.current]\n        }\n        setUsers(updatedUsers)\n      }\n\n      return () => {\n        console.debug(\"unregister follow handler\")\n        followEventHandler.follow = () => {\n          console.debug(\"following handler isn't mounted\")\n        }\n      }\n    }\n  }, [showFollowers])\n\n  useEffect(() => {\n    usersRef.current = users\n  }, [users])\n\n  function shouldShowLoadMoreBtn() {\n    // if already loaded users and\n    // haven't loaded all users\n    if (users.length === 0) return false\n    if (showFollowers) {\n      return users.length < props.followerCount\n    } else {\n      return users.length < props.followingCount\n    }\n  }\n\n  const loadUsers = offset => {\n    let url = urls.dbAPI + \"/api/v1/\"\n    if (showFollowers) {\n      url += \"followers\"\n    } else {\n      url += \"followings\"\n    }\n    url += \"?offset=\" + offset\n\n    if (offset) {\n      setLoadingMore(true)\n    } else {\n      setLoading(true)\n    }\n    axios\n      .get(url)\n      .then(resp => {\n        // Notice we have to call prevUsers rather than\n        // just setUsers(users.concat(data)) because\n        // update to state is async, it won't work even if the\n        // call takes 10 mins to return, it always use the user data\n        // when useEffect is called\n        setUsers(prevUsers => prevUsers.concat(resp.data))\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setLoading(false)\n        setLoadingMore(false)\n      })\n  }\n\n  return (\n    <div className=\"sp-follow-tab\">\n      <Button\n        onClick={props.back}\n        style={{\n          position: \"fixed\",\n          marginTop: 1,\n          marginLeft: 5,\n          border: \"none\",\n          fontSize: \"large\"\n        }}\n        icon=\"arrow-left\"\n      />\n\n      <center className=\"sp-tab-header\">\n        <Radio.Group\n          className=\"sp-toggle-page-site-chat\"\n          size=\"small\"\n          defaultValue={showFollowers}\n          buttonStyle=\"solid\"\n          onChange={e => {\n            setShowFollowers(e.target.value)\n          }}\n        >\n          <Radio.Button value={false}>\n            关注了 {account.followingCount}\n          </Radio.Button>\n          <Radio.Button value={true}>\n            被关注 {account.followerCount}\n          </Radio.Button>\n        </Radio.Group>\n      </center>\n      <div className=\"sp-tab-body\">\n        {loading && (\n          <center>\n            <Icon\n              style={{\n                marginTop: 10,\n                border: \"none\",\n                fontSize: \"large\"\n              }}\n              type=\"loading\"\n            />\n          </center>\n        )}\n\n        {users.map(user => (\n          <div\n            onClick={() => tabContext.selectOtherUser(user)}\n            className=\"sp-follow-row\"\n            key={user.id}\n          >\n            {/* <AvatarWithHoverCard user={user}/> */}\n            <Avatar icon=\"user\" src={user.avatarSrc} />\n            {user.name}\n          </div>\n        ))}\n        <center style={{ margin: 20 }}>\n          {shouldShowLoadMoreBtn() && (\n            <Button\n              loading={loadingMore}\n              type=\"primary\"\n              onClick={() => {\n                loadUsers(users.length)\n              }}\n            >\n              加载更多...\n            </Button>\n          )}\n        </center>\n      </div>\n    </div>\n  )\n}\n\nexport default Follow\n","/*global chrome*/\nconst storage = {\n  get: (key, callback) => {\n    if (chrome && chrome.storage) {\n      chrome.storage.local.get(key, item => {\n        if (key in item) {\n          callback(item[key])\n        } else {\n          callback(null)\n        }\n      })\n    } else {\n      if (localStorage.hasOwnProperty(key)) {\n        callback(JSON.parse(localStorage.getItem(key)))\n      } else {\n        callback(null)\n      }\n    }\n  },\n  set: (key, value) => {\n    if (chrome && chrome.storage) {\n      var item = {}\n      item[key] = value\n      chrome.storage.local.set(item)\n    } else {\n      const stringValue = JSON.stringify(value)\n      localStorage.setItem(key, stringValue)\n      // localstorage event isn't triggered on same tab\n      // manually create an event and dispatch it\n      const storageEvent = document.createEvent(\"HTMLEvents\")\n      storageEvent.initEvent(\"storage\", true, true)\n      storageEvent.eventName = \"storage\"\n      storageEvent.key = key\n      storageEvent.newValue = stringValue\n      window.dispatchEvent(storageEvent)\n    }\n  },\n  addEventListener: (key, callback) => {\n    if (chrome && chrome.storage) {\n      chrome.storage.onChanged.addListener((changes, area) => {\n        if (key in changes) {\n          console.debug(changes[key])\n          callback(changes[key][\"newValue\"])\n        }\n      })\n    } else {\n      window.addEventListener(\"storage\", storageEvent => {\n        // key;          // name of the property set, changed etc.\n        // oldValue;     // old value of property before change\n        // newValue;     // new value of property after change\n        // url;          // url of page that made the change\n        // storageArea;  // localStorage or sessionStorage,\n        // depending on where the change happened.\n        if (storageEvent.key === key) {\n          callback(JSON.parse(storageEvent.newValue))\n        }\n      })\n    }\n  }\n}\n\nexport default storage\n","import React from \"react\"\nimport { Form, Icon, Input, Button, message } from \"antd\"\n\nimport { login, register } from \"services/account\"\nimport storageManager from \"utils/storage\"\nimport AccountContext from \"context/account-context\"\n\nclass NormalLoginForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      // registration code may be moved into\n      // dedicated file in the future\n      registering: false\n    }\n  }\n\n  componentDidMount() {\n    storageManager.get(\"login\", values => {\n      if (values) {\n        console.debug(\"found login in storage\")\n        this.props.form.setFieldsValue({\n          userId: values.userId,\n          password: values.password\n        })\n        if (this.context.autoLogin) {\n          this.loginUser(values)\n          console.debug(\"auto login\")\n        }\n      } else {\n        console.debug(\"no login found in storage, register now\")\n        const password = Math.random()\n          .toString(36)\n          .slice(-8)\n        this.setState({ registering: true })\n        register(password)\n          .then(resp => {\n            this.setState({ registering: false })\n            const account = resp.data\n            this.props.setAccount(account)\n            storageManager.set(\"login\", {\n              userId: account.numId,\n              password: password\n            })\n            message.success(\"注册成功!\")\n          })\n          .catch(err => {\n            this.setState({ registering: false })\n            // TODO: put specific error message in each .catch\n            // Only use global axios interceptor when backend\n            // return prepared error message\n            // message.error(\"注册失败，请刷新重试\")\n          })\n          .then(() => {})\n      }\n      this.context.stopAutoLogin()\n    })\n  }\n\n  loginUser = values => {\n    this.setState({ loading: true })\n    login(values.userId, values.password)\n      .then(res => {\n        console.debug(res.data)\n        const account = res.data\n        this.setState({ loading: false })\n        this.props.setAccount(account)\n        storageManager.set(\"login\", values)\n      })\n      .catch(err => {\n        console.error(err)\n        this.setState({ loading: false })\n      })\n      .then(() => {\n        // can't change state here because if succeed\n        // component will be unmounted before we set loading\n        // to be false\n        // this.setState({ loading: false })\n      })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      console.debug(\"Received values of form: \", values)\n      if (!err) {\n        this.loginUser(values)\n      }\n    })\n  }\n\n  render() {\n    if (this.state.registering) {\n      return (\n        <div className=\"sp-special-tab\">\n          <center style={{ marginTop: \"50%\" }}>注册中...</center>\n        </div>\n      )\n    }\n    const { getFieldDecorator } = this.props.form\n    return (\n      <div className=\"sp-special-tab\">\n        <Form\n          style={{ width: \"70%\", margin: \"auto\", marginTop: 100 }}\n          onSubmit={this.handleSubmit}\n          className=\"login-form\"\n        >\n          <Form.Item>\n            {getFieldDecorator(\"userId\", {\n              rules: [{ required: true, message: \"请输入用户ID\" }]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                placeholder=\"ID\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator(\"password\", {\n              rules: [{ required: true, message: \"请输入密码\" }]\n            })(\n              <Input\n                prefix={\n                  <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                }\n                type=\"password\"\n                placeholder=\"密码\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              style={{ marginRight: 10 }}\n              loading={this.state.loading}\n            >\n              登录\n            </Button>\n            {/* 或\n            {\n              // eslint-disable-next-line\n              <a>注册</a>\n            } */}\n          </Form.Item>\n        </Form>\n      </div>\n    )\n  }\n}\nNormalLoginForm.contextType = AccountContext\n\nconst WrappedNormalLoginForm = Form.create({ name: \"normal_login\" })(\n  NormalLoginForm\n)\n\nexport default WrappedNormalLoginForm\n","import React, { useState, useContext, useEffect } from \"react\"\nimport { Button } from \"antd\"\n\nimport AccountContext from \"context/account-context\"\nimport ResetPassword from \"./ResetPassword\"\nimport EditProfile from \"./EditProfile\"\nimport Profile from \"./Profile\"\nimport Follow from \"./Follow\"\nimport Login from \"containers/Account/Login\"\nimport { getAccount } from \"services/account\"\n\nfunction Account(props) {\n  const accountContext = useContext(AccountContext)\n  const account = accountContext.account\n  const setAccount = accountContext.setAccount\n\n  const [resettingPassword, setResetPasswordState] = useState(false)\n  const [edittingProfile, setEdittingProfileState] = useState(false)\n  // showingFollow is for toggling the Follow view\n  // showFollowers is for toggling follower vs following\n  const [showingFollow, setShowingFollowState] = useState(false)\n  const [showFollowers, setShowFollowersState] = useState(false)\n\n  const [loadingAccount, setLoadingAccount] = useState(false)\n  useEffect(() => {\n    // load account for once if user is logged in and\n    // switch to account tab, otherwise the account info\n    // is only loaded when login which becomes stale easily\n    if (account) {\n      setLoadingAccount(true)\n      console.debug(\"refresh account data\")\n      getAccount()\n        .then(resp => {\n          setAccount(resp.data)\n        })\n        .catch(err => {})\n        .then(() => {\n          setLoadingAccount(false)\n        })\n    }\n  }, [])\n\n  const backToMainPage = () => {\n    // called by the back button\n    setResetPasswordState(false)\n    setEdittingProfileState(false)\n    setShowingFollowState(false)\n  }\n\n  if (!account) {\n    return <Login setAccount={setAccount} />\n  }\n\n  return (\n    <div>\n      {loadingAccount && <Button icon=\"loading\" className=\"sp-back-btn\" />}\n      {resettingPassword && <ResetPassword back={backToMainPage} />}\n      {showingFollow && (\n        <Follow\n          showFollowers={showFollowers}\n          followingCount={account.followingCount}\n          followerCount={account.followerCount}\n          back={backToMainPage}\n        />\n      )}\n      {edittingProfile && (\n        <EditProfile\n          account={account}\n          setAccount={setAccount}\n          back={backToMainPage}\n        />\n      )}\n      <Profile\n        account={account}\n        showResetPassword={setResetPasswordState}\n        showEditProfile={setEdittingProfileState}\n        showFollowings={() => {\n          setShowingFollowState(true)\n          setShowFollowersState(false)\n        }}\n        showFollowers={() => {\n          setShowingFollowState(true)\n          setShowFollowersState(true)\n        }}\n        setAccount={setAccount}\n      />\n    </div>\n  )\n}\n\nexport default Account\n","import React from \"react\"\nimport { Button, Avatar, Icon, Row, Col } from \"antd\"\n\nconst avatarStyle = {\n  margin: \"auto\",\n  marginTop: 20,\n  display: \"block\"\n}\n\nconst aboutStyle = {\n  display: \"inline-block\",\n  minWidth: 200,\n  maxWidth: 350,\n  borderBottom: \"1px solid lightgray\",\n  textAlign: \"left\",\n  overflow: \"auto\",\n  maxHeight: 72,\n  padding: 5,\n  paddingLeft: 10,\n  paddingRight: 10,\n  wordBreak: \"break-word\"\n}\n\nfunction ProfileBody(props) {\n  const {\n    directMessage,\n    loading,\n    loaded,\n    user,\n    following,\n    followerCount,\n    followUser\n  } = props\n\n  return (\n    <div>\n      <Avatar style={avatarStyle} size={128} src={user.avatarSrc} icon=\"user\" />\n      <center style={{ margin: 20, fontSize: \"large\", fontWeight: \"bold\" }}>\n        {user.name}\n        {loading && (\n          <Icon\n            style={{\n              display: \"block\",\n              marginTop: 10,\n              border: \"none\"\n            }}\n            type=\"loading\"\n          />\n        )}\n      </center>\n      {loaded && (\n        <span>\n          <Row gutter={50} style={{ textAlign: \"center\" }}>\n            <Col style={{ textAlign: \"right\" }} span={12}>\n              ID: {user.numId}\n            </Col>\n            <Col style={{ textAlign: \"left\" }} span={12}>\n              关注者: {followerCount}\n            </Col>\n          </Row>\n          <br />\n          <center>\n            <div style={aboutStyle}>{user.about}</div>\n            <div style={{ marginTop: 30 }}>\n              {following && (\n                <Button\n                  icon=\"user-delete\"\n                  style={{ margin: 10 }}\n                  size=\"large\"\n                  onClick={() => {\n                    followUser(false)\n                  }}\n                >\n                  取消关注\n                </Button>\n              )}\n              {!following && (\n                <Button\n                  type=\"primary\"\n                  icon=\"user-add\"\n                  style={{ margin: 10 }}\n                  size=\"large\"\n                  onClick={() => {\n                    followUser(true)\n                  }}\n                >\n                  关注\n                </Button>\n              )}\n\n              <Button\n                onClick={() => {\n                  directMessage(user)\n                }}\n                icon=\"mail\"\n                style={{ margin: 10 }}\n                size=\"large\"\n              >\n                私信\n              </Button>\n            </div>\n          </center>\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default ProfileBody\n","import React from \"react\"\nimport { Button } from \"antd\"\n\nimport ProfileMeta from \"./ProfileMeta\"\nimport PrfileBody from \"./ProfileBody\"\n\nfunction OtherProfile(props) {\n  if (!props.data) return <span />\n\n  const user = {\n    avatarSrc: props.data.avatarSrc,\n    name: props.data.name,\n    id: props.data.userId || props.data.id\n  }\n\n  return (\n    <div className=\"sp-special-tab\">\n      <Button\n        onClick={() => props.selectOtherUser()}\n        className=\"sp-back-btn\"\n        icon=\"arrow-left\"\n      />\n      <ProfileMeta user={user}>\n        <PrfileBody directMessage={props.directMessage} />\n      </ProfileMeta>\n    </div>\n  )\n}\n\nexport default OtherProfile\n","import axios from \"axios\"\n\nimport urls from \"config/urls\"\n\nexport const getMessages = offset => {\n  const params = {\n    offset: offset\n  }\n  return axios.get(`${urls.dbAPI}/api/v1/messages`, {\n    params: params\n  })\n}\n\nexport const postMessage = (userId, content, offset) => {\n  const payload = {\n    userId: userId,\n    content: content,\n    offset: offset\n  }\n  return axios.post(`${urls.dbAPI}/api/v1/message`, payload)\n}\n","import \"./Conversation.css\"\n\nimport React, { useContext, useState, useRef, useEffect } from \"react\"\nimport { Button } from \"antd\"\n\nimport Message from \"containers/Chat/Message\"\nimport { postMessage } from \"services/message\"\nimport AccountContext from \"context/account-context\"\nimport TabContext from \"context/tab-context\"\nimport InputWithPicker from \"components/InputWithPicker\"\n\nconst conversationBodyStyle = {\n  height: \"calc(100% - 107px)\",\n  overflow: \"auto\",\n  width: \"100%\",\n  position: \"fixed\",\n  background: \"#f6f9fc\",\n  padding: 10,\n  paddingBottom: 50\n}\n\nconst AUTO_SCROLL_TRESHOLD_DISTANCE = 150\n\nfunction Conversation(props) {\n  const account = useContext(AccountContext).account\n  const tabContext = useContext(TabContext)\n  const messages = props.conversation.messages\n  const other = props.conversation.user\n  const offset = props.offset\n  const [sending, setSending] = useState(false)\n  const bodyRef = useRef()\n\n  let lastMsg = null\n  const body = messages.map(msg => {\n    msg.text = msg.content\n    if (msg.self) {\n      msg.name = account.name\n      msg.avatarSrc = account.avatarSrc\n      msg.userId = account.id\n    } else {\n      msg.name = other.name\n      msg.avatarSrc = other.avatarSrc\n      msg.userId = other.id\n    }\n    let mergeAbove = false\n    if (lastMsg && lastMsg.userId === msg.userId) mergeAbove = true\n    lastMsg = msg\n    return <Message key={msg.id} data={msg} mergeAbove={mergeAbove} />\n  })\n  useEffect(() => {\n    const bodyDiv = bodyRef.current\n    bodyDiv.scrollTop = bodyDiv.scrollHeight\n  }, [])\n\n  useEffect(() => {\n    console.debug(\"auto scroll down\")\n    if (messages && messages.length) {\n      const lastMsg = messages[messages.length - 1]\n      let timeout = 50\n      if (lastMsg.type === \"sticker\") {\n        timeout = 500\n      }\n      scrollToBottomIfNearBottom(timeout)\n    }\n  }, [messages])\n  function scrollToBottomIfNearBottom(timeout) {\n    timeout = timeout || 100\n    const bodyDiv = bodyRef.current\n    if (\n      bodyDiv.scrollHeight - bodyDiv.scrollTop - bodyDiv.offsetHeight <\n      AUTO_SCROLL_TRESHOLD_DISTANCE\n    ) {\n      setTimeout(() => {\n        bodyDiv.scrollTop = bodyDiv.scrollHeight\n      }, timeout)\n    }\n  }\n  function send(input) {\n    setSending(true)\n    postMessage(other.id, input, offset)\n      .then(resp => {\n        props.mergeAndSaveNewConversations(resp.data)\n        // TODO: maybe display message locally right away\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setSending(false)\n      })\n    return true\n  }\n\n  return (\n    <div className=\"sp-inbox-conversation\">\n      <Button onClick={props.back} className=\"sp-back-btn\" icon=\"arrow-left\" />\n      <div className=\"sp-tab-header\">\n        <center>\n          {/* <Button icon=\"refresh\" size=\"small\">\n            刷新\n          </Button> */}\n          <span>\n            与\n            <span\n              className=\"sp-conversation-username\"\n              onClick={() => tabContext.selectOtherUser(other)}\n            >\n              {other.name}\n            </span>\n            的对话\n          </span>\n        </center>\n      </div>\n      <div ref={bodyRef} style={conversationBodyStyle}>\n        {body}\n      </div>\n\n      <div className=\"sp-chat-bottom\">\n        <InputWithPicker sending={sending} send={send} />\n      </div>\n    </div>\n  )\n}\nexport default Conversation\n","import \"./Inbox.css\"\nimport React, { useEffect, useState, useContext, useRef } from \"react\"\nimport { Avatar, Icon, Radio } from \"antd\"\nimport moment from \"moment\"\n\nimport Conversation from \"./Conversation\"\nimport { getMessages } from \"services/message\"\nimport AccountContext from \"context/account-context\"\nimport storageManager from \"utils/storage\"\n\nfunction Inbox(props) {\n  const user = props.user\n  const setUser = props.setUser\n  const account = useContext(AccountContext).account\n  let storageKey = \"inbox-\"\n  if (account) storageKey += account.id\n  const prevAccountRef = useRef()\n  const [conversations, setConversations] = useState({})\n  const [showNotifications, setShowNotifications] = useState(false)\n  // offset equals to the biggest message id\n  const [loading, setLoading] = useState(false)\n  let selectedConversation = null\n  if (user) {\n    if (user.id in conversations) {\n      selectedConversation = conversations[user.id]\n    } else {\n      selectedConversation = {\n        user: user,\n        messages: []\n      }\n      setConversations({ ...conversations, [user.id]: selectedConversation })\n    }\n  }\n  function getMessagesFromServer(offset) {\n    setLoading(true)\n    getMessages(offset)\n      .then(resp => {\n        // Merge with existing data\n        mergeAndSaveNewConversations(resp.data)\n      })\n      .catch(err => {\n        console.error(err)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }\n  function mergeAndSaveNewConversations(newConversations) {\n    // merge and save new conversations into storage\n    storageManager.get(storageKey, conversations => {\n      conversations = conversations || {}\n      Object.keys(newConversations).forEach(userId => {\n        if (userId in conversations) {\n          conversations[userId].messages.push(\n            ...newConversations[userId].messages\n          )\n          // use the new user data\n          conversations[userId].user = newConversations[userId].user\n        } else {\n          conversations[userId] = newConversations[userId]\n        }\n      })\n      storageManager.set(storageKey, conversations)\n    })\n  }\n  function getOffset(conversations) {\n    let offset = 0\n    Object.values(conversations).forEach(c => {\n      if (c.messages.length) {\n        c.lastMsg = c.messages[c.messages.length - 1]\n        offset = Math.max(offset, c.lastMsg.id)\n      }\n    })\n    return offset\n  }\n\n  useEffect(() => {\n    // console.debug(\"register inbox storage listener\")\n    // storageManager.addEventListener(\"inbox\", conversations => {\n    //   setConversations(conversations)\n    // })\n  }, [])\n\n  useEffect(() => {\n    // Listen for account change, 2 cases:\n    // 1. not logged in => logged in  (this may not be when\n    // the whole app logged in, since Inbox component is mounted\n    // later than the App component)\n    // 2. logged in => logged out\n\n    // There shouldn't be a case that's logged in as user A\n    // then suddenly changed to user B without going through\n    // a log out step\n\n    // When logged in\n    // 0. clear messages in memory (not in storage)\n    // 1. get messages from storage\n    // 2. get new messages from server using offset and save into storage\n\n    // When logged out, clear the memory\n\n    if (account) {\n      if (!prevAccountRef.current) {\n        // If logged in as a different account or first time login?\n        console.debug(\"[inbox] logged in, load from storage\")\n        storageManager.get(storageKey, conversations => {\n          conversations = conversations || {}\n          setConversations(conversations)\n          console.debug(\"[inbox] loaded from storage, fetch from server\")\n          getMessagesFromServer(getOffset(conversations))\n        })\n        console.debug(\"register inbox storage listener\")\n        // TODO: if same account login and logout and login again\n        // this listener is registered multiple times, should unregister\n        // when logout\n        storageManager.addEventListener(storageKey, conversations => {\n          console.debug(\"[inbox] storage updated\")\n          setConversations(conversations)\n        })\n      }\n    } else {\n      console.debug(\"[inbox] logged out\")\n      setUser(null)\n      setConversations({})\n      // Clear memory\n    }\n\n    prevAccountRef.current = account\n  }, [account])\n\n  // Backend/storage returns dictionary data structure so\n  // it's easy to insert new conversation\n  // Need to convert into array and sort by date to display\n  // Also get offset\n  const conversationsArray = Object.keys(conversations).map(userId => {\n    const c = conversations[userId]\n    if (c.messages.length) {\n      c.lastMsg = c.messages[c.messages.length - 1]\n      c.time = moment.utc(c.lastMsg.created)\n    } else {\n      // if no message, this is user attempting to start conversation\n      c.time = moment.utc()\n    }\n    return c\n  })\n\n  conversationsArray.sort((a, b) => {\n    return b.time - a.time\n  })\n\n  let rows = conversationsArray.map(c => {\n    const user = c.user\n    return (\n      <div\n        onClick={() => {\n          setUser(user)\n        }}\n        key={user.id}\n        className=\"sp-inbox-row\"\n      >\n        <Avatar icon=\"user\" src={user.avatarSrc} />\n        <span className=\"sp-row-right\">\n          <div>\n            {user.name}\n            {c.lastMsg && (\n              <span className=\"sp-message-time\">{c.time.fromNow()}</span>\n            )}\n          </div>\n          {c.lastMsg && (\n            <div className=\"sp-message-content\">{c.lastMsg.content}</div>\n          )}\n        </span>\n      </div>\n    )\n  })\n  if (conversationsArray.length === 0) {\n    rows = <center style={{ margin: 20 }}>没有消息</center>\n  }\n\n  if (!account) {\n    return (\n      <div className=\"sp-inbox-tab\">\n        <center className=\"sp-tab-header\">尚未登录</center>\n      </div>\n    )\n  }\n  return (\n    <div className=\"sp-inbox-tab\">\n      {selectedConversation && !showNotifications && (\n        <Conversation\n          back={() => {\n            setUser(null)\n          }}\n          offset={getOffset(conversations)}\n          conversation={selectedConversation}\n          mergeAndSaveNewConversations={mergeAndSaveNewConversations}\n        />\n      )}\n      {!selectedConversation && (\n        <div>\n          <center className=\"sp-tab-header\">\n            <Radio.Group\n              size=\"small\"\n              defaultValue={showNotifications}\n              buttonStyle=\"solid\"\n              onChange={e => {\n                setShowNotifications(e.target.value)\n              }}\n            >\n              <Radio.Button value={false}>私信</Radio.Button>\n              <Radio.Button value={true}>消息</Radio.Button>\n            </Radio.Group>\n          </center>\n          <div className=\"sp-tab-body\" style={{ paddingBottom: 70 }}>\n            {loading && (\n              <center>\n                <Icon\n                  style={{\n                    marginTop: 10,\n                    border: \"none\",\n                    fontSize: \"large\"\n                  }}\n                  type=\"loading\"\n                />\n              </center>\n            )}\n\n            {!showNotifications && rows}\n            {showNotifications && (\n              <center style={{ margin: 20 }}>没有消息</center>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Inbox\n","import \"antd/dist/antd.css\"\nimport \"./Tab.css\"\n\nimport React, { useState } from \"react\"\nimport { Tabs, Icon, Tooltip } from \"antd\"\n\nimport Chat from \"containers/Chat\"\nimport Comment from \"containers/Comment\"\nimport Account from \"containers/Account\"\nimport OtherProfile from \"containers/OtherProfile\"\nimport Inbox from \"containers/Inbox\"\n\nimport TabContext from \"context/tab-context\"\n\nconst TabPane = Tabs.TabPane\n\nfunction Tab(props) {\n  console.log(\"render tab\")\n\n  const [activeTab, changeTab] = useState(props.tab)\n  // view other's profile\n  const [other, selectOtherUser] = useState()\n  // view direct message with other\n  const [conversationUser, setCoversationUser] = useState()\n  function directMessage(user) {\n    selectOtherUser(null)\n    changeTab(\"inbox\")\n    setCoversationUser(user)\n  }\n\n  return (\n    <TabContext.Provider\n      value={{\n        selectOtherUser: selectOtherUser,\n        changeTab: changeTab,\n        directMessage: directMessage\n      }}\n    >\n      <div className=\"card-container\">\n        <Tabs\n          onChange={val => {\n            if (val == \"minimize\") {\n              window.parent.postMessage(\"minimize\", \"*\")\n              return\n            }\n            changeTab(val)\n            selectOtherUser(null)\n          }}\n          activeKey={activeTab}\n          type=\"card\"\n        >\n          <TabPane\n            tab={\n              <Tooltip title=\"实时聊天\" placement=\"bottom\">\n                <Icon type=\"message\" />\n              </Tooltip>\n            }\n            key=\"chat\"\n            forceRender={true}\n          >\n            <Chat />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"留言板\" placement=\"bottom\">\n                <Icon type=\"form\" />\n              </Tooltip>\n            }\n            key=\"comment\"\n          >\n            <Comment />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"收件箱\" placement=\"bottom\">\n                <Icon type=\"mail\" />\n              </Tooltip>\n            }\n            key=\"inbox\"\n          >\n            <Inbox user={conversationUser} setUser={setCoversationUser} />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"个人信息\" placement=\"bottom\">\n                <Icon type=\"user\" />\n              </Tooltip>\n            }\n            key=\"account\"\n          >\n            <Account />\n          </TabPane>\n          <TabPane\n            tab={\n              <Tooltip title=\"隐藏聊天盒\" placement=\"bottom\">\n                <Icon type=\"close\" />\n              </Tooltip>\n            }\n            key=\"minimize\"\n          >\n            <span>shoud not see this!</span>\n          </TabPane>\n        </Tabs>\n      </div>\n      <OtherProfile data={other} selectOtherUser={selectOtherUser} />\n    </TabContext.Provider>\n  )\n}\n\nexport default Tab\n","import React from \"react\"\nimport { Icon, message } from \"antd\"\n\nimport Tab from \"containers/Tab\"\nimport AccountContext from \"context/account-context\"\nimport socketManager, { socketHandler } from \"socket/socket\"\nimport storageManager from \"utils/storage\"\nimport axios from \"axios\"\nimport moment from \"moment\"\nrequire(\"moment/locale/zh-cn\") //moment.js bug, has to manually include\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: null,\n      // A few steps before mounting the app\n      // 1. Check local/chrome storage to see if there's account data\n      // , if so, mount the app.\n      // 2. If no account in storage, check if there's credential data\n      // in storage, if so, mount the app and auto login\n      // 3. If neither account nor credential data is in storage,\n      // mount the app and auto register\n\n      // In short, do not mount until done loading account/credential\n      // from storage\n\n      // above comment needs update\n      loadingFromStorage: true,\n      // Only if there is no account data in storage on page load\n      // autoLogin only once per page load\n      autoLogin: false\n    }\n    const locale = window.navigator.userLanguage || window.navigator.language\n    if (locale.indexOf(\"zh\") > -1) {\n      moment.locale(\"zh-cn\")\n    }\n    // console.debug(locale)\n    message.config({\n      top: 80,\n      duration: 2,\n      maxCount: 3\n    })\n  }\n\n  componentDidMount() {\n    axios.interceptors.response.use(\n      response => {\n        // Do something with response data\n        return response\n      },\n      error => {\n        let errorMessage = \"出错了\"\n        // set account to null when we receive 401\n        if (error.response && error.response.status === 401) {\n          this.setAccount(null)\n          errorMessage = \"请重新登录\"\n        }\n        if (\n          error.response &&\n          error.response.data &&\n          error.response.data.error\n        ) {\n          errorMessage = error.response.data.error\n        }\n        message.error(errorMessage)\n        return Promise.reject(error)\n      }\n    )\n    console.log(\"get account from storage, register account change listener\")\n    storageManager.get(\"account\", account => {\n      if (account) {\n        console.debug(\"found account in storage\")\n        console.debug(account)\n        this.setState({ account: account })\n      } else {\n        this.setState({ autoLogin: true })\n        console.debug(\"no account found in storage\")\n      }\n      this.setState({ loadingFromStorage: false })\n    })\n    storageManager.addEventListener(\"account\", account => {\n      this.setState({ account: account })\n    })\n    socketHandler.onConnected = () => {\n      message.success(\"连接成功！\", 2)\n    }\n    socketHandler.onDisconnected = () => {\n      message.warn(\"连接已断开\", 2)\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Need to differentiate login/logout with profile info update\n    // maybe shouldn't have grouped them in one object?\n    const login = !prevState.account && this.state.account\n    const logout = prevState.account && !this.state.account\n    if (login) {\n      console.debug(\"logged in\")\n      axios.defaults.headers.common[\"token\"] = this.state.account.token\n      socketManager.connect(this.state.account, true)\n    }\n    if (logout) {\n      console.debug(\"logged out\")\n      axios.defaults.headers.common[\"token\"] = null\n      socketManager.disconnect()\n      // TODO:  change tab?\n    }\n  }\n\n  setAccount = account => {\n    console.debug(\"set account\")\n    storageManager.set(\"account\", account)\n  }\n\n  stopAutoLogin = () => {\n    this.setState({ autoLogin: false })\n  }\n\n  render() {\n    if (this.state.loadingFromStorage) {\n      return (\n        <center>\n          <Icon style={{ marginTop: \"50%\" }} type=\"loading\" />\n        </center>\n      )\n    }\n    let tab = \"chat\"\n    if (!this.state.account) {\n      tab = \"account\"\n    }\n    return (\n      <AccountContext.Provider\n        value={{\n          account: this.state.account,\n          setAccount: this.setAccount,\n          autoLogin: this.state.autoLogin,\n          stopAutoLogin: this.stopAutoLogin\n        }}\n      >\n        <Tab tab={tab} />\n      </AccountContext.Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}